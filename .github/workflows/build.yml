name: Build AMSI_ETW_Patcher

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    types: [closed]

permissions:
  contents: write
  pull-requests: write
  repository-projects: write

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install 7zip
        run: choco install 7zip -y
        shell: cmd

      - name: Download Nim
        run: Invoke-WebRequest -Uri https://nim-lang.org/download/nim-2.2.4_x64.zip -OutFile nim.zip
        shell: powershell

      - name: Extract Nim
        run: 7z x nim.zip -oC:\nim
        shell: cmd

      - name: Download MinGW
        run: Invoke-WebRequest -Uri https://github.com/brechtsanders/winlibs_mingw/releases/download/15.1.0posix-13.0.0-msvcrt-r3/winlibs-x86_64-posix-seh-gcc-15.1.0-mingw-w64msvcrt-13.0.0-r3.7z -OutFile mingw.7z
        shell: powershell

      - name: Extract MinGW
        run: 7z x mingw.7z -oC:\mingw
        shell: cmd

      - name: Set up environment
        run: |
          echo "C:\nim\nim-2.2.4\bin" >> $env:GITHUB_PATH
          echo "C:\mingw\bin" >> $env:GITHUB_PATH
        shell: powershell

      - name: Verify Nim and GCC
        run: |
          nim --version
          gcc --version
        shell: cmd

      - name: Install dependencies
        run: nimble install -y
        shell: cmd

      - name: Build Nim project
        run: nim c -d=release -d:strip --opt:size --cc:gcc --hints=on --app=console --cpu=amd64 --out=main main.nim
        shell: cmd

      - name: Rename binary
        run: move main.exe AMSI_ETW_Patcher.exe
        shell: cmd

      - name: List build directory
        shell: cmd
        run: dir

      - name: Delete existing tag and release
        uses: dev-drprasad/delete-tag-and-release@v1.1
        with:
          tag_name: AE_build
          delete_release: true
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        id: create_release
        if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.merged == true)
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: AE_build
          release_name: AE_build
          body: "Release created by GitHub Actions"

      - name: Upload Release Asset
        if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.merged == true)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: AMSI_ETW_Patcher.exe
          asset_name: AMSI_ETW_Patcher.exe
          asset_content_type: application/octet-stream